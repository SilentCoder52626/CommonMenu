@model ItemCreateDto
@{
    var CreateUpdateString = Model.Id > 0 ? "Update" : "Create";
}
<div class="container-fluid">
    <div class="h3 mb-2 text-gray-800">
        @CreateUpdateString Item
        @* <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/">Home</a></li>
        <li class="breadcrumb-item"><a href="Menu/Item/">Item </a></li>
        <li class="breadcrumb-item active" aria-current="page">Create</li>
        </ol> *@
    </div>

    <div class="card">
        <div class="card-body">
            <form method="post" class="MenuForm" enctype="multipart/form-data">
                @Html.HiddenFor(a=>a.Id)
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Name</label>
                            @Html.TextBoxFor(a=>a.Name, new { @class="form-control required"})
                            @Html.ValidationMessageFor(a=>a.Name,"", new {@class = "text-danger"})
                        </div>
                    </div>
                   <div class="col-md-6">
                        <div class="form-group">
                            <label>Price</label>
                            @Html.TextBoxFor(a=>a.Price, new { @class="form-control required"})
                            @Html.ValidationMessageFor(a=>a.Price,"", new {@class = "text-danger"})
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Type</label>
                        @Html.DropDownListFor(a=>a.CategoryId, new SelectList(ViewBag.MeunCategories,"Id","Name"),"--Select--", new {@class="form-control required drop-down"})
                            @Html.ValidationMessageFor(a=>a.CategoryId,"", new {@class = "text-danger"})
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Image</label>
                            <input type="file" name="file" id="image" class="form-control ">
                            <span class="text-danger field-validation-valid" data-valmsg-for="file" data-valmsg-replace="true"></span>
                        </div>
                    </div> 
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Description</label>
                            @Html.TextAreaFor(a=>a.Description, new { @class="form-control", @rows=5})
                            @Html.ValidationMessageFor(a=>a.Description,"", new {@class = "text-danger"})
                        </div>
                    </div>
                    @if (Model.Image != null)
                    {
                        <div class="col-md-6">
                            <div mt-5 mb-5">
                                <img src="@Model.Image.Path" alt="@Model.Image.FileName" class="center" style="height:250px; width:250px;">
                            </div>
                        </div>
                    }
                </div>

                <div class="row">
                    <div class="col-md-10">
                        <input type="button" class="btn btn-success" id="save_btn" value="Save" />
                        <a asp-action="Index" class="btn btn-primary">Back</a>

                    </div>
                </div>
                
            </form>

        </div>
    </div>
</div>


@section Scripts
    {
    <script>

        $(document).ready(function () {


            $("#save_btn").on('click', function (e) {
                e.preventDefault();
                let form = $(".MenuForm");
                form.validate();

                if (form.valid()) {

                    var formData = new FormData();
                    formData.append('Id', $('#Id').val());
                    formData.append('Name', $('#Name').val());
                    formData.append('Price', $('#Price').val());
                    formData.append('Description', $('#Description').val());
                    formData.append('CategoryId', $('#CategoryId').val());

                    formData.append('file', $('#image')[0].files[0]); 

                    $.ajax({
                        method: 'POST',
                        url: '/api/Item/AddOrUpdate',
                        contentType: false,  // Set contentType to false when using FormData
                        processData: false,  // Set processData to false to prevent jQuery from transforming the data
                        data: formData,
                        success: function (response) {
                            console.log(response);
                            if (response.StatusCode == 200) {
                                ShowSuccessNotification(response.Message);
                                setTimeout(function () {
                                    window.location = '/Menu/Item/AddOrUpdate?id=' + response.Data.Id;
                                }, 2000);
                            } else {
                                ShowErrorNotification(response.Message);
                            }
                        },
                        error: function (error) {
                            console.log(error)
                            ShowErrorNotification(error.responseText);
                        }
                    });

                }
            })
        })
    </script>
}